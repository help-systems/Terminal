{"ast":null,"code":"var _jsxFileName = \"C:\\\\Help Systems\\\\terminal\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Login from \"./components/Login\";\nimport TodoTerminal from \"./components/TodoTerminal\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUsernameInput = e => {\n      var user = this.state.user;\n      var username = e.target.value;\n      user = {\n        username,\n        password: this.state.password\n      };\n      this.setState({\n        user,\n        username\n      });\n    };\n\n    this.handlePasswordInput = e => {\n      var user = this.state.user;\n      var password = e.target.value;\n      user = {\n        username: this.state.username,\n        password\n      };\n      this.setState({\n        user,\n        password\n      });\n    };\n\n    this.defaultSituation = () => {\n      var products = [];\n\n      for (let i = 0; i < 6; i++) {\n        products[i] = {\n          key: i,\n          barcode: \"\",\n          count: 1\n        };\n      }\n\n      this.setState({\n        products\n      });\n    };\n\n    this.inputGivenMoney = e => {\n      const givenmoney = e.target.value;\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      user: [],\n      loginsituation: false,\n      products: []\n    };\n    this.Login = this.Login.bind(this);\n    this.handleBarcodeInput = this.handleBarcodeInput.bind(this);\n    this.inputProductCount = this.inputProductCount.bind(this);\n  }\n\n  handleBarcodeInput(key, e) {\n    var barcode = e.target.value;\n    var products = this.state.products;\n    products.map(item => {\n      if (item.key === key) {\n        item.barcode = barcode;\n      }\n\n      return item;\n    });\n\n    if (products[products.length - 1].barcode !== \"\") {\n      products[products.length] = {\n        key: products.length,\n        barcode: \"\",\n        count: 1\n      };\n    }\n\n    this.setState({\n      products\n    });\n  }\n\n  Login() {\n    const user = this.state.user;\n    console.log(user);\n    console.log(this.state);\n    fetch('http://localhost:5000/questions', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state.user)\n    }).then(response => {\n      console.log(response);\n      this.setState({\n        loginsituation: true\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    this.setState({\n      loginsituation: true\n    });\n    var products = [];\n\n    for (let i = 0; i < 6; i++) {\n      products[i] = {\n        key: i,\n        barcode: \"\",\n        count: 1\n      };\n    }\n\n    this.setState({\n      products\n    });\n    console.log(\"sdsfsf\");\n  }\n\n  inputProductCount(key, e) {\n    var count = e.target.value;\n    var products = this.state.products;\n    products.map(item => {\n      if (item.key === key) {\n        item.count = count;\n      }\n\n      return item;\n    });\n    this.setState({\n      products\n    });\n  }\n\n  render() {\n    const loginsituation = this.state.loginsituation;\n    return React.createElement(React.Fragment, null, !loginsituation ? React.createElement(Login, {\n      handleUsernameInput: this.handleUsernameInput,\n      handlePasswordInput: this.handlePasswordInput,\n      Login: this.Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }) : React.createElement(TodoTerminal, {\n      handleBarcodeInput: this.handleBarcodeInput,\n      products: this.state.products,\n      inputProductCount: this.inputProductCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Help Systems/terminal/src/App.js"],"names":["React","Login","TodoTerminal","App","Component","constructor","props","handleUsernameInput","e","user","state","username","target","value","password","setState","handlePasswordInput","defaultSituation","products","i","key","barcode","count","inputGivenMoney","givenmoney","loginsituation","bind","handleBarcodeInput","inputProductCount","map","item","length","console","log","fetch","method","headers","Accept","body","JSON","stringify","then","response","catch","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Login from \"./components/Login\";\nimport TodoTerminal from \"./components/TodoTerminal\";\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: \"\",\n      password:\"\",\n      user:[],\n      loginsituation: false,\n      products:[]\n    }\n    this.Login = this.Login.bind(this);\n    this.handleBarcodeInput = this.handleBarcodeInput.bind(this);\n    this.inputProductCount = this.inputProductCount.bind(this);\n  }\n  \n  handleUsernameInput = (e) => {\n    var user = this.state.user;\n    var username = e.target.value;\n    user = {username,password:this.state.password};\n    this.setState({\n      user,\n      username\n    });\n  }\n\n  handlePasswordInput = (e) => {\n    var user = this.state.user;\n    var password = e.target.value;\n    user = {username:this.state.username,password};\n    this.setState({\n      user,\n      password\n    });\n    \n  }\n\n  defaultSituation = () => {\n    var products = [];\n    for (let i = 0; i < 6; i++) {\n     products[i] = {key:i,barcode:\"\",count:1};\n      \n    }\n    this.setState({\n      products\n    })\n  }\n\n  handleBarcodeInput(key,e) {\n\n    var barcode = e.target.value;\n    var products =  this.state.products;\n    products.map(item=>{\n      if(item.key === key) {\n        item.barcode = barcode;\n      }    \n      return item;\n    });\n\n    if(products[products.length -1].barcode !== \"\") {\n      products[products.length] = {key:products.length,barcode:\"\",count:1};\n    }   \n\n    this.setState({\n     products\n    });\n  }\n\n  Login() {\n    const user = this.state.user;\n    console.log(user);  \n    console.log(this.state);\n    fetch('http://localhost:5000/questions',{\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(this.state.user)\n    })\n    .then(response => {\n      console.log(response);\n      this.setState({\n        loginsituation:true\n      });\n    })\n    .catch(error =>{\n      console.log(error);\n    })\n    this.setState({\n      loginsituation:true\n    });\n    var products = [];\n    for (let i = 0; i < 6; i++) {\n     products[i] = {key:i,barcode:\"\",count:1};\n      \n    }\n    this.setState({\n      products\n    })\n    console.log(\"sdsfsf\");\n  }\n\n  inputProductCount(key,e) {\n    var count = e.target.value;\n    var products =  this.state.products;\n    products.map(item=>{\n      if(item.key === key) {\n        item.count = count;\n      }    \n      return item;\n    });\n    this.setState({\n      products\n    })\n\n  }\n\n  inputGivenMoney = (e) => {\n    const givenmoney = e.target.value;\n  }\n\n  render() {\n    const loginsituation = this.state.loginsituation;\n    return (\n      <>\n      {\n        !loginsituation ?\n          <Login\n          handleUsernameInput = {this.handleUsernameInput}\n          handlePasswordInput = {this.handlePasswordInput}\n          Login = {this.Login}\n        />\n        :\n        <TodoTerminal\n          handleBarcodeInput = {this.handleBarcodeInput}\n          products = {this.state.products}\n          inputProductCount = {this.inputProductCount}\n        />\n      }\n      </>\n       \n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}