{"ast":null,"code":"var _jsxFileName = \"C:\\\\Help Systems\\\\terminal\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Login from \"./components/Login\";\nimport TodoTerminal from \"./components/TodoTerminal\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUsernameInput = e => {\n      var user = this.state.user;\n      var username = e.target.value;\n      user = {\n        username,\n        password: this.state.password\n      };\n      this.setState({\n        user,\n        username\n      });\n    };\n\n    this.handlePasswordInput = e => {\n      var user = this.state.user;\n      var password = e.target.value;\n      user = {\n        username: this.state.username,\n        password\n      };\n      this.setState({\n        user,\n        password\n      });\n    };\n\n    this.defaultSituation = () => {\n      var products = [];\n\n      for (let i = 0; i < 6; i++) {\n        products[i] = {\n          key: i,\n          barcode: \"\",\n          count: 1\n        };\n      }\n\n      this.setState({\n        products\n      });\n    };\n\n    this.inputGivenMoney = e => {\n      const givenmoney = e.target.value;\n      this.setState({\n        givenmoney\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      user: {\n        username: \"\",\n        password: \"\"\n      },\n      loginsituation: false,\n      products: [],\n      givenmoney: \"\",\n      loginerror: false,\n      barcodes: {}\n    };\n    this.Login = this.Login.bind(this);\n    this.handleBarcodeInput = this.handleBarcodeInput.bind(this);\n    this.inputProductCount = this.inputProductCount.bind(this);\n    this.transactionDone = this.transactionDone.bind(this);\n  }\n\n  async handleBarcodeInput(key, e) {\n    var barcode = e.target.value;\n    const url = `http://localhost:58423/Terminal/GetProducts/485326587`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    var products = this.state.products;\n    products.map(item => {\n      if (item.key === key) {\n        item.barcode = barcode;\n        item.product_name = data[0].product_name;\n        item.supplier_Name = data[0].supplier_Name;\n        item.selling_Price = data[0].selling_Price;\n      }\n\n      return item;\n    });\n    this.setState({\n      barcodes: data\n    });\n\n    if (products[products.length - 1].barcode !== \"\") {\n      products[products.length] = {\n        key: products.length,\n        barcode: \"\",\n        count: 1,\n        product_name: \"\",\n        supplier_Name: \"\",\n        selling_Price: \"\"\n      };\n    }\n\n    this.setState({\n      products\n    });\n  }\n\n  async Login() {\n    //  const user = this.state.user;\n    console.log(JSON.stringify(this.state.user));\n    const url = `http://localhost:58423/Terminal/Login/${JSON.stringify(this.state.user)}`;\n    const settings = {\n      method: \"POST\",\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Credentials': true,\n        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD',\n        'Access-Control-Allow-Headers': 'origin, content-type, accept, authorization'\n      },\n      //  redirect: 'follow', \n      //  referrerPolicy: 'no-referrer',\n      body: `${this.state.user}`\n    };\n    const response = await fetch(url, settings);\n    const data = await response.json();\n    console.log(data);\n\n    if (data) {\n      this.setState({\n        loginsituation: true\n      });\n    }\n\n    this.setState({\n      loginsituation: true // loginerror: true\n\n    }); //let newDate = new Date();\n    //console.log(newDate);\n    // fetch(url,{\n    //     method: 'POST',\n    //     headers: {\n    //         Accept: 'application/json',\n    //         'Content-Type': 'application/json',\n    //     },\n    //     body: JSON.stringify(this.state.user)\n    // })\n    // .then(response => {\n    //   // console.log(response);\n    //   this.setState({\n    //     loginsituation:true\n    //   });\n    // })\n    // .catch(error =>{\n    //    console.log(error);\n    // })\n\n    if (!this.state.loginsituation) {\n      var user = {\n        username: \"\",\n        password: \"\"\n      };\n      this.setState({\n        username: \"\",\n        password: \"\",\n        user\n      });\n    }\n\n    var products = [];\n\n    for (let i = 0; i < 6; i++) {\n      products[i] = {\n        key: i,\n        barcode: \"\",\n        count: 1,\n        product_name: \"\",\n        supplier_Name: \"\",\n        selling_Price: \"\"\n      };\n    }\n\n    this.setState({\n      products\n    });\n  }\n\n  inputProductCount(key, e) {\n    var count = e.target.value;\n    var products = this.state.products;\n    products.map(item => {\n      if (item.key === key) {\n        item.count = count;\n      }\n\n      return item;\n    });\n    this.setState({\n      products\n    });\n  }\n\n  transactionDone() {\n    var products = [];\n\n    for (let i = 0; i < 6; i++) {\n      products[i] = {\n        key: i,\n        barcode: \"\",\n        count: 1\n      };\n    }\n\n    this.setState({\n      products\n    });\n  }\n\n  render() {\n    const loginsituation = this.state.loginsituation;\n    return React.createElement(React.Fragment, null, !loginsituation ? React.createElement(Login, {\n      handleUsernameInput: this.handleUsernameInput,\n      handlePasswordInput: this.handlePasswordInput,\n      Login: this.Login,\n      user: this.state.user,\n      loginerror: this.state.loginerror,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }) : React.createElement(TodoTerminal, {\n      handleBarcodeInput: this.handleBarcodeInput,\n      products: this.state.products,\n      inputProductCount: this.inputProductCount,\n      inputGivenMoney: this.inputGivenMoney,\n      transactionDone: this.transactionDone,\n      barcodes: this.state.barcodes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Help Systems/terminal/src/App.js"],"names":["React","Login","TodoTerminal","App","Component","constructor","props","handleUsernameInput","e","user","state","username","target","value","password","setState","handlePasswordInput","defaultSituation","products","i","key","barcode","count","inputGivenMoney","givenmoney","loginsituation","loginerror","barcodes","bind","handleBarcodeInput","inputProductCount","transactionDone","url","response","fetch","data","json","console","log","map","item","product_name","supplier_Name","selling_Price","length","JSON","stringify","settings","method","headers","Accept","body","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Login from \"./components/Login\";\nimport TodoTerminal from \"./components/TodoTerminal\";\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: \"\",\n      password:\"\",\n      user:{username:\"\",password:\"\"},\n      loginsituation: false,\n      products:[],\n      givenmoney:\"\",\n      loginerror: false, \n      barcodes: {}\n    }\n    this.Login = this.Login.bind(this);\n    this.handleBarcodeInput = this.handleBarcodeInput.bind(this);\n    this.inputProductCount = this.inputProductCount.bind(this);\n    this.transactionDone = this.transactionDone.bind(this);\n  }\n  \n  handleUsernameInput = (e) => {\n    var user = this.state.user;\n    var username = e.target.value;\n    user = {username,password:this.state.password};\n    this.setState({\n      user,\n      username\n    });\n  }\n\n  handlePasswordInput = (e) => {\n    var user = this.state.user;\n    var password = e.target.value;\n    user = {username:this.state.username,password};\n    this.setState({\n      user,\n      password\n    });\n    \n  }\n\n  defaultSituation = () => {\n    var products = [];\n    for (let i = 0; i < 6; i++) {\n     products[i] = {key:i,barcode:\"\",count:1};\n      \n    }\n    this.setState({\n      products\n    })\n  }\n\n  async handleBarcodeInput(key,e) {\n\n    var barcode = e.target.value;\n\n    const url = `http://localhost:58423/Terminal/GetProducts/485326587`;      \n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data)\n\n    var products =  this.state.products;\n    products.map(item=>{\n      if(item.key === key) {\n        item.barcode = barcode;\n        item.product_name = data[0].product_name;\n        item.supplier_Name = data[0].supplier_Name;\n        item.selling_Price = data[0].selling_Price;\n      }    \n      return item;\n    });\n\n      this.setState({\n        barcodes:data\n      })\n\n      if (products[products.length -1].barcode !== \"\") {\n        products[products.length] = {key:products.length,barcode:\"\",count:1, product_name:\"\", supplier_Name:\"\", selling_Price:\"\"};\n    }   \n\n    this.setState({\n      products\n     });\n\n  }\n\n\n  async Login() {\n  //  const user = this.state.user;\n\n    console.log(JSON.stringify(this.state.user));\n    const url = `http://localhost:58423/Terminal/Login/${JSON.stringify (this.state.user)}`;\n    const settings = {\n      method: \"POST\",\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Credentials': true,\n          'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS, HEAD',\n          'Access-Control-Allow-Headers': 'origin, content-type, accept, authorization',\n      },\n      //  redirect: 'follow', \n      //  referrerPolicy: 'no-referrer',\n      body: `${this.state.user}`\n    };\n    const response = await fetch(url,settings);\n    const data = await response.json();\n    console.log(data);\n \n\n    if(data){\n      this.setState({\n        loginsituation:true\n      })\n    }\n\n    this.setState({\n      loginsituation:true\n      // loginerror: true\n    });\n\n\n    //let newDate = new Date();\n    //console.log(newDate);\n    // fetch(url,{\n    //     method: 'POST',\n    //     headers: {\n    //         Accept: 'application/json',\n    //         'Content-Type': 'application/json',\n    //     },\n    //     body: JSON.stringify(this.state.user)\n    // })\n    // .then(response => {\n    //   // console.log(response);\n    //   this.setState({\n    //     loginsituation:true\n    //   });\n    // })\n    // .catch(error =>{\n    //    console.log(error);\n    // })\n    if(!this.state.loginsituation){\n    var  user = {username:\"\",password:\"\"};\n      this.setState({\n        username:\"\",\n        password:\"\",\n        user\n      });\n    }\n    \n    var products = [];\n    for (let i = 0; i < 6; i++) {\n     products[i] = {key:i,barcode:\"\",count:1, product_name:\"\", supplier_Name:\"\", selling_Price:\"\"};\n      \n    }\n    this.setState({\n      products\n    })\n  }\n\n  inputProductCount(key,e) {\n    var count = e.target.value;\n    var products =  this.state.products;\n    products.map(item=>{\n      if(item.key === key) {\n        item.count = count;\n      }    \n      return item;\n    });\n    this.setState({\n      products\n    })\n  }\n\n  inputGivenMoney = (e) => {\n    const givenmoney = e.target.value;\n    this.setState({\n      givenmoney\n    });\n\n  }\n\n  transactionDone () {\n    var products = []; \n\n    for (let i = 0; i < 6; i++) {\n     products[i] = {key:i,barcode:\"\",count:1};\n    }\n\n    this.setState({\n      products      \n    })\n  }\n\n  render() {\n    const loginsituation = this.state.loginsituation;\n    return (\n      <>\n      {\n        !loginsituation ?\n          <Login\n            handleUsernameInput = {this.handleUsernameInput}\n            handlePasswordInput = {this.handlePasswordInput}\n            Login = {this.Login}\n            user = {this.state.user}\n            loginerror = {this.state.loginerror}\n         />\n        :\n          <TodoTerminal\n            handleBarcodeInput = {this.handleBarcodeInput}\n            products = {this.state.products}\n            inputProductCount = {this.inputProductCount}\n            inputGivenMoney = {this.inputGivenMoney}\n            transactionDone = {this.transactionDone}\n            barcodes = {this.state.barcodes}\n          />\n      }\n      </>      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}