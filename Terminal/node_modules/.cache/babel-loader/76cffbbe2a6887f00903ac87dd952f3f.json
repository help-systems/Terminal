{"ast":null,"code":"var _jsxFileName = \"C:\\\\Help Systems\\\\terminal\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Login from \"./components/Login\";\nimport TodoTerminal from \"./components/TodoTerminal\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUsernameInput = e => {\n      var user = this.state.user;\n      var username = e.target.value;\n      user = {\n        username,\n        password: this.state.password\n      };\n      this.setState({\n        user,\n        username\n      });\n    };\n\n    this.handlePasswordInput = e => {\n      var user = this.state.user;\n      var password = e.target.value;\n      user = {\n        username: this.state.username,\n        password\n      };\n      this.setState({\n        user,\n        password\n      });\n    };\n\n    this.defaultSituation = () => {\n      var barcodes = [];\n\n      for (let i = 0; i < 6; i++) {\n        barcodes[i] = {\n          key: i,\n          barcode: \"\"\n        };\n      }\n\n      this.setState({\n        barcodes\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      user: [],\n      loginsituation: false,\n      barcodes: []\n    };\n    this.Login = this.Login.bind(this);\n    this.handleBarcodeInput = this.handleBarcodeInput.bind(this);\n  }\n\n  handleBarcodeInput(key, e) {\n    var barcode = e.target.value;\n    var barcodes = this.state.barcodes;\n    barcodes.map(item => {\n      if (item.key === key) {\n        item.barcode = barcode;\n      }\n\n      return item;\n    });\n\n    if (barcodes[barcodes.length - 1].barcode !== \"\") {\n      barcodes[barcodes.length] = {\n        key: barcodes.length,\n        barcode: \"\"\n      };\n    } // barcodes.unshift({\n    //   key,\n    //   barcode\n    // });\n\n\n    this.setState({\n      barcodes\n    });\n  }\n\n  Login() {\n    const user = this.state.user;\n    console.log(user);\n    console.log(this.state);\n    fetch('http://localhost:5000/questions', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state.user)\n    }).then(response => {\n      console.log(response);\n      this.setState({\n        loginsituation: true\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    this.setState({\n      loginsituation: true\n    });\n    var barcodes = [];\n\n    for (let i = 0; i < 6; i++) {\n      barcodes[i] = {\n        key: i,\n        barcode: \"\"\n      };\n    }\n\n    this.setState({\n      barcodes\n    });\n    console.log(\"sdsfsf\");\n  }\n\n  render() {\n    const loginsituation = this.state.loginsituation;\n    return React.createElement(React.Fragment, null, !loginsituation ? React.createElement(Login, {\n      handleUsernameInput: this.handleUsernameInput,\n      handlePasswordInput: this.handlePasswordInput,\n      Login: this.Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) : React.createElement(TodoTerminal, {\n      handleBarcodeInput: this.handleBarcodeInput,\n      barcodes: this.state.barcodes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Help Systems/terminal/src/App.js"],"names":["React","Login","TodoTerminal","App","Component","constructor","props","handleUsernameInput","e","user","state","username","target","value","password","setState","handlePasswordInput","defaultSituation","barcodes","i","key","barcode","loginsituation","bind","handleBarcodeInput","map","item","length","console","log","fetch","method","headers","Accept","body","JSON","stringify","then","response","catch","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Login from \"./components/Login\";\nimport TodoTerminal from \"./components/TodoTerminal\";\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: \"\",\n      password:\"\",\n      user:[],\n      loginsituation: false,\n      barcodes:[]\n    }\n    this.Login = this.Login.bind(this);\n    this.handleBarcodeInput = this.handleBarcodeInput.bind(this);\n  }\n  \n  handleUsernameInput = (e) => {\n    var user = this.state.user;\n    var username = e.target.value;\n    user = {username,password:this.state.password};\n    this.setState({\n      user,\n      username\n    });\n  }\n\n  handlePasswordInput = (e) => {\n    var user = this.state.user;\n    var password = e.target.value;\n    user = {username:this.state.username,password};\n    this.setState({\n      user,\n      password\n    });\n    \n  }\n\n  defaultSituation = () => {\n    var barcodes = [];\n    for (let i = 0; i < 6; i++) {\n     barcodes[i] = {key:i,barcode:\"\"};\n      \n    }\n    this.setState({\n      barcodes\n    })\n  }\n\n  handleBarcodeInput(key,e) {\n\n    var barcode = e.target.value;\n    var barcodes =  this.state.barcodes;\n    barcodes.map(item=>{\n      if(item.key === key) {\n        item.barcode = barcode;\n      }    \n      return item;\n    });\n    if(barcodes[barcodes.length -1].barcode !== \"\") {\n      barcodes[barcodes.length] = {key:barcodes.length,barcode:\"\"};\n    }\n    // barcodes.unshift({\n    //   key,\n    //   barcode\n    // });\n\n    this.setState({\n     barcodes\n    });\n  }\n\n  Login() {\n    const user = this.state.user;\n    console.log(user);  \n    console.log(this.state);\n    fetch('http://localhost:5000/questions',{\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(this.state.user)\n    })\n    .then(response => {\n      console.log(response);\n      this.setState({\n        loginsituation:true\n      });\n    })\n    .catch(error =>{\n      console.log(error);\n    })\n    this.setState({\n      loginsituation:true\n    });\n    var barcodes = [];\n    for (let i = 0; i < 6; i++) {\n     barcodes[i] = {key:i,barcode:\"\"};\n      \n    }\n    this.setState({\n      barcodes\n    })\n    console.log(\"sdsfsf\");\n  }\n\n\n\n  render() {\n    const loginsituation = this.state.loginsituation;\n    return (\n      <>\n      {\n        !loginsituation ?\n          <Login\n          handleUsernameInput = {this.handleUsernameInput}\n          handlePasswordInput = {this.handlePasswordInput}\n          Login = {this.Login}\n        />\n        :\n        <TodoTerminal\n          handleBarcodeInput = {this.handleBarcodeInput}\n          barcodes = {this.state.barcodes}\n        />\n      }\n      </>\n       \n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}